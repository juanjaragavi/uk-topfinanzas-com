feat: Complete removal of overlay functionality from AdZep integration

BREAKING CHANGE: Overlay system completely removed

## Changes Made

### Overlay Utilities (lib/ads/overlay.ts)
- Gutted all overlay creation and display logic
- All functions (ensureOverlay, showOverlay, hideOverlay, destroyOverlay) are now no-ops
- No DOM manipulation or overlay elements are created

### SPA Bridge (components/analytics/adzep-spa-bridge.tsx)
- Removed overlayTimeout ref completely
- Removed all overlay-related logic from route handlers
- Removed showOverlay/hideOverlay function calls
- Cleaned up comments and code to focus only on AdZep activation
- Maintained full AdZep activation functionality

### Global CSS (app/globals.css)
- Added comprehensive CSS rules to force-hide any overlay elements
- Targets all possible overlay ID and class patterns
- Uses !important to ensure overlays cannot appear

### Documentation (lib/documents/OVERLAY_COMPLETE_REMOVAL.md)
- Created comprehensive documentation of changes
- Included testing checklist
- Documented what remains working

## Impact

✅ AdZep activation continues to work normally
✅ Ad units (uk_topfinanzas_3, uk_topfinanzas_4, etc.) still render
✅ Navigation triggers ad activation properly
✅ Path exclusions (quiz pages) still work
✅ Development logging remains functional

❌ Custom overlay no longer appears on any page
❌ No blur effect blocking blog content
❌ No visual interference with page content

## Result

Only AdZep's own ad units, activated by window.AdZepActivateAds(), can add visual elements to pages. No custom overlay system interferes with user experience on blog posts or any other pages.

Resolves: Overlay appearing over blog posts and blocking content

